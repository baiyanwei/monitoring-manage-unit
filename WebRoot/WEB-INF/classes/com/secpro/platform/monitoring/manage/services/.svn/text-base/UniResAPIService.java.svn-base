package com.ultrapower.project.bomc.he.cmdb.resif.services;

import com.ultrapower.project.bomc.he.cmdb.resif.util.ApplicationConfiguration;
import com.ultrapower.project.bomc.he.cmdb.resif.util.log.PlatformLogger;
import com.ultrapower.project.bomc.he.cmdb.resif.util.service.IService;
import com.ultrapower.project.bomc.he.cmdb.resif.util.service.ServiceInfo;
import com.ultrapower.ultracmdb.cmdb.api.UniResAPI;
import com.ultrapower.ultracmdb.cmdb.client.UniResRMIClient;
import com.ultrapower.ultracmdb.cmdb.reconciliation.api.ReconciliationAPI;
import com.ultrapower.ultracmdb.cmdb.reconciliation.util.ReconciliationClientAPIUitl;

/**
 * @author baiyanwei UniResAPI RMI接口缓存池，主要负责UniResAPI的连接也持有
 */
@ServiceInfo(description = "主要负责UniResAPI的连接也持有")
public class UniResAPIService implements IService {

	private static PlatformLogger _logger = PlatformLogger.getLogger(UniResAPIService.class);

	// UNIAPI实例
	private UniResAPI uniResAPI = null;
	// ReconciliationAPI
	// 采集审计API
	private ReconciliationAPI rcapi = null;

	/**
	 * 求请UniResAPI实例
	 */
	private synchronized void initUniResAPI() throws Exception {
		long strartLong = System.currentTimeMillis();
		try {
			uniResAPI = null;
			uniResAPI = UniResRMIClient.getInstance(ApplicationConfiguration.ULTRA_CMDB_IP, ApplicationConfiguration.ULTRA_CMDB_PORT)
					.getUniResAPI();
			_logger.info("initAPISucceed", uniResAPI.getClass().getName(), String.valueOf(System.currentTimeMillis() - strartLong));
		} catch (Exception e) {
			_logger.info("initAPIFault", UniResRMIClient.class.getName(), e.getMessage(),
					String.valueOf(System.currentTimeMillis() - strartLong));
			throw e;
		}
	}

	/**
	 * 求请UniResAPI实例
	 */
	private synchronized void initReconciliationAPI() throws Exception {
		long strartLong = System.currentTimeMillis();
		try {
			rcapi = null;
			rcapi = ReconciliationClientAPIUitl.getInstance(ApplicationConfiguration.ULTRA_CMDB_IP,
					ApplicationConfiguration.ULTRA_CMDB_PORT).getReconciliationAPI();
			_logger.info("initAPISucceed", rcapi.getClass().getName(), String.valueOf(System.currentTimeMillis() - strartLong));
		} catch (Exception e) {
			_logger.info("initAPIFault", ReconciliationClientAPIUitl.class.getName(), e.getMessage(),
					String.valueOf(System.currentTimeMillis() - strartLong));
			throw e;
		}
	}

	/**
	 * @return UniResAPI 取得UniResAPI实例
	 */
	public UniResAPI getUniResAPI() {
		if (uniResAPI == null) {
			try {
				initUniResAPI();
			} catch (Exception e) {
				_logger.exception("getUniResAPI", e);
			}
		}
		return uniResAPI;
	}

	/**
	 * @return ReconciliationAPI 取得ReconciliationAPI实例
	 */
	public ReconciliationAPI getReconciliationAPI() {
		if (rcapi == null) {
			try {
				initReconciliationAPI();
			} catch (Exception e) {
				_logger.exception("getReconciliationAPI", e);
			}
		}
		return rcapi;
	}

	/**
	 * 清除UNIAPI
	 */
	private synchronized void clearAPI() {
		uniResAPI = null;
		_logger.info("clearAPI", UniResAPI.class.getName());
		rcapi = null;
		_logger.info("clearAPI", ReconciliationAPI.class.getName());
	}

	/**
	 * @return String 重新连接
	 */
	public synchronized void reLoadUniApi() throws Exception {
		clearAPI();
		try {
			UniResRMIClient.getInstance(ApplicationConfiguration.ULTRA_CMDB_IP, ApplicationConfiguration.ULTRA_CMDB_PORT).reLoad();
			ReconciliationClientAPIUitl.getInstance(ApplicationConfiguration.ULTRA_CMDB_IP, ApplicationConfiguration.ULTRA_CMDB_PORT)
					.reload();
		} catch (Exception e) {
			_logger.exception("reLoadUniApi", e);
			throw e;
		}
		initUniResAPI();
		initReconciliationAPI();
	}

	public void start() throws Exception {
		initUniResAPI();
		initReconciliationAPI();
	}

	public void stop() throws Exception {
		clearAPI();
	}

}
